version: '3.7'

services:
  api:
    container_name: student_api_prod
    build:
      context: ./api
    ports:
      - ${API_PORT}:${API_PORT}
      - 9229:9229
    command: npm run start:prod
    networks:
      - backend
    environment:
      TYPEORM_CONNECTION: ${TYPEORM_CONNECTION} 
      TYPEORM_HOST: ${TYPEORM_HOST} 
      TYPEORM_USERNAME: ${TYPEORM_USERNAME} 
      TYPEORM_PASSWORD: ${TYPEORM_PASSWORD} 
      TYPEORM_DATABASE: ${TYPEORM_DATABASE} 
      TYPEORM_PORT: ${TYPEORM_PORT} 
      TYPEORM_SYNCHRONIZE: ${TYPEORM_SYNCHRONIZE} 
      TYPEORM_LOGGING: ${TYPEORM_LOGGING} 
      TYPEORM_CACHE: ${TYPEORM_CACHE} 
      TYPEORM_ENTITIES: ${TYPEORM_ENTITIES}
      API_PORT: ${API_PORT}
    depends_on:
      - postgres
  postgres:
    container_name: student_db_prod
    image: postgres:9.6-alpine
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_DB: ${TYPEORM_DATABASE}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432
    volumes:
      - api_db_data:/var/lib/postgresql/data
  front:
    container_name: student_app_prod
    build:
      context: ./front
    ports:
      - 8080:80
    networks:
      - backend
      - frontend
    environment:
      REACT_APP_GRAPHQL_URI: ${REACT_APP_GRAPHQL_URI}
    depends_on:
      - api
networks:
  backend:
  frontend:
volumes:
  api_db_data: